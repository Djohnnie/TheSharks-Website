name: DEVELOP -> TEST

on:
  push:
    branches:
      - develop
    paths-ignore:
      - TheSharks.App/*      
      - .github/workflows/main_thesharks-app.yml
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.1
          cache: 'npm'
          cache-dependency-path: ./TheSharks.UI/package-lock.json

      - name: npm install and build
        working-directory: ./TheSharks.UI
        run: |
          npm install
          npm run build --if-present

      - name: Set up .NET 7
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'

      - name: Build with dotnet
        run: dotnet build the-sharks-be-website.sln --configuration Release

      - name: dotnet publish
        run: dotnet publish TheSharks.API/TheSharks.API.csproj -c Release -o ${{env.DOTNET_ROOT}}/api

      - name: dotnet publish
        run: dotnet publish FluentMigration/TheSharks.FluentMigration.csproj -c Release -o ${{env.DOTNET_ROOT}}/db

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: ${{env.DOTNET_ROOT}}/api

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: db
          path: ${{env.DOTNET_ROOT}}/db

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Get current date and time
        id: date
        run: echo "BUILD_TIME=$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV

      - name: Download api artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: api
          path: api

      - name: Download db artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: db
          path: db
      
      - name: Run Fluent Migrations
        run: dotnet TheSharks.FluentMigration.dll -s -c '${{ secrets.CONNECTIONSTRING }}'
        working-directory: db
          
      - name: App Settings Variable Substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: 'api/appsettings.json'
        env:
          Version: ${{ env.BUILD_TIME }}
          SecureKey: ${{ secrets.SECURE_KEY }}
          Database.ConnectionString: ${{ secrets.CONNECTIONSTRING }}
          ApplicationInsights.ConnectionString: ${{ secrets.APPINSIGHTS_CONNECTIONSTRING }}
          JWT.Secret: ${{ secrets.JWT_SECRET }}
          JWT.Audience: ${{ secrets.JWT_AUDIENCE }}
          JWT.Issuer: ${{ secrets.JWT_ISSUER }}
          Mail.FrontendLink: ${{ secrets.MAIL_FRONTENDLINK }}
          Mail.Sender: ${{ secrets.MAIL_SENDER }}
          Mail.SendGridKey: ${{ secrets.MAIL_SENDGRIDKEY }}
          Storages.Documents.StorageConnectionString: ${{ secrets.STORAGES_DOCUMENTS_CONNECTIONSTRING }}
          Storages.Pictures.StorageConnectionString: ${{ secrets.STORAGES_PICTURES_CONNECTIONSTRING }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'thesharks-test'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_F76A9E9C6BFE4704AE1FFFFABDECFD73 }}
          package: api/